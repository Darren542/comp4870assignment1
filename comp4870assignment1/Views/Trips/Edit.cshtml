@model ClassLibrary.Models.Trip
@inject Microsoft.AspNetCore.Authorization.IAuthorizationService AuthorizationService
@inject Microsoft.AspNetCore.Identity.UserManager<Member> UserManager

@{
    ViewData["Title"] = "Edit Trip";
}

@{
    var user = await UserManager.GetUserAsync(User);
    var roles = await UserManager.GetRolesAsync(user!);
}

<h1>Edit Trip</h1>

<form asp-action="Edit">
    <input type="hidden" asp-for="TripId" />

    <div class="form-group">
        <label asp-for="VehicleId" class="control-label">Vehicle</label>
        <select asp-for="VehicleId" class ="form-control" asp-items="ViewBag.VehicleId"></select>
    </div>

    <div class="form-group">
        <label asp-for="Date" class="control-label">Date</label>
        <input asp-for="Date" type="date" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="Time" class="control-label">Time</label>
        <input asp-for="Time" type="time" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="DestinationAddress" class="control-label">Destination Address</label>
        <input asp-for="DestinationAddress" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="MeetingAddress" class="control-label">Meeting Address</label>
        <input asp-for="MeetingAddress" class="form-control" />
    </div>
    <br/>
    <button type="submit" class="btn btn-primary">Save</button>

    @if (roles.Contains("Admin"))
    {
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    } else {
        <a asp-action="MyTrips" class="btn btn-secondary">Back to My Trips</a>
    }

</form>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
