@model ClassLibrary.Models.Trip
@inject Microsoft.AspNetCore.Authorization.IAuthorizationService AuthorizationService
@inject Microsoft.AspNetCore.Identity.UserManager<Member> UserManager

@{
    ViewData["Title"] = "Trip Details";
}

@{
    var user = await UserManager.GetUserAsync(User);
    var roles = await UserManager.GetRolesAsync(user!);
}


<component type="typeof(TripDetails)" render-mode="ServerPrerendered" param-TripId="Model.TripId" />

<dl class="row">
    <hr />
    <dt class="col-sm-2">Created</dt>
    <dd class="col-sm-10">@Model.Created</dd>
    <dt class="col-sm-2">Modified</dt>
    <dd class="col-sm-10">@Model.Modified</dd>
    <dt class="col-sm-2">Created By</dt>
    <dd class="col-sm-10">@(Model.CreatedByMember?.Email ?? "")</dd>
    <dt class="col-sm-2">Modified By</dt>
    <dd class="col-sm-10">@(Model.ModifiedByMember?.Email ?? "")</dd>
</dl>
<div>
    @if (roles.Contains("Admin"))
    {
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    } else {
        <a asp-action="MyTrips" class="btn btn-secondary">Back to My Trips</a>
    }
</div>
