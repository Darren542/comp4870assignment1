@page "/member/edit/{Id}"
@using ClassLibrary.Models
@inject MemberService _memberService
@inject NavigationManager _navigationManager

<PageTitle>Edit Member</PageTitle>

@if (member == null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="@member" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="FirstName">First Name</label>
            <InputText id="FirstName" class="form-control" @bind-Value="member.FirstName" />
            <ValidationMessage For="@(() => member.FirstName)" />
        </div>

        <div class="form-group">
            <label for="LastName">Last Name</label>
            <InputText id="LastName" class="form-control" @bind-Value="member.LastName" />
            <ValidationMessage For="@(() => member.LastName)" />
        </div>

        <div class="form-group">
            <label for="Mobile">Mobile</label>
            <InputText id="Mobile" class="form-control" @bind-Value="member.Mobile" />
            <ValidationMessage For="@(() => member.Mobile)" />
        </div>

        <div class="form-group">
            <label for="Street">Street</label>
            <InputText id="Street" class="form-control" @bind-Value="member.Street" />
            <ValidationMessage For="@(() => member.Street)" />
        </div>

        <div class="form-group">
            <label for="City">City</label>
            <InputText id="City" class="form-control" @bind-Value="member.City" />
            <ValidationMessage For="@(() => member.City)" />
        </div>

        <div class="form-group">
            <label for="PostalCode">Postal Code</label>
            <InputText id="PostalCode" class="form-control" @bind-Value="member.PostalCode" />
            <ValidationMessage For="@(() => member.PostalCode)" />
        </div>

        <div class="form-group">
            <label for="Country">Country</label>
            <InputText id="Country" class="form-control" @bind-Value="member.Country" />
            <ValidationMessage For="@(() => member.Country)" />
        </div>

        <div class="form-group">
            <label for="Email">Email</label>
            <InputText id="Email" class="form-control" @bind-Value="member.Email" />
            <ValidationMessage For="@(() => member.Email)" />
        </div>

        <div class="form-group">
            <label for="PhoneNumber">Phone Number</label>
            <InputText id="PhoneNumber" class="form-control" @bind-Value="member.PhoneNumber" />
            <ValidationMessage For="@(() => member.PhoneNumber)" />
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </EditForm>
}

@code {
    [Parameter]
    public string Id { get; set; }

    private Member member;

    protected override async Task OnInitializedAsync()
    {
        member = await _memberService.GetMemberAsync(Id);
    }

    private async Task HandleValidSubmit()
    {
        var updatedMember = await _memberService.UpdateMemberAsync(Id, member);
        if (updatedMember != null)
        {
            _navigationManager.NavigateTo("/members");
        }
    }
}
