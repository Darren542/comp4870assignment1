@page "/member/createPage"
@using ClassLibrary.Models
@inject MemberService _memberService // Assume this service is properly set up for member management
@inject NavigationManager _navigationManager

<PageTitle>Create Member</PageTitle>

<EditForm Model="@member" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="FirstName">First Name</label>
        <InputText id="FirstName" @bind-Value="member.FirstName" class="form-control" />
    </div>
    <div class="form-group">
        <label for="LastName">Last Name</label>
        <InputText id="LastName" @bind-Value="member.LastName" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Mobile">Mobile</label>
        <InputText id="Mobile" @bind-Value="member.Mobile" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Street">Street</label>
        <InputText id="Street" @bind-Value="member.Street" class="form-control" />
    </div>
    <div class="form-group">
        <label for="City">City</label>
        <InputText id="City" @bind-Value="member.City" class="form-control" />
    </div>
    <div class="form-group">
        <label for="PostalCode">Postal Code</label>
        <InputText id="PostalCode" @bind-Value="member.PostalCode" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Country">Country</label>
        <InputText id="Country" @bind-Value="member.Country" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Email">Email</label>
        <InputText id="Email" @bind-Value="member.Email" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Password">Password</label>
        <InputText id="Password" @bind-Value="password" type="password" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
</EditForm>

@code {
    private Member member = new Member();
    private string password = "";

    private async Task HandleValidSubmit()
    {   
        await _memberService.AddMemberAsync(member);
        _navigationManager.NavigateTo("/member/list");
    }
}
